
//__________________________________________________________________________________
//__________________________________________________________________________________
//
//							F&P ITEM USABILITY
//__________________________________________________________________________________
//__________________________________________________________________________________


LAM ~READ_FNP_KIT_INFO~

/*
// NOTES:

armor:
- talos flag 			= any armor
- helm flag 			= leather + chain
- lathander flag		= leather only

what about druids? 
- totemic flag			= druid... no plate or chain
- shapeshifter flag		= mystic
- avenger/beast_friend	= occultist

./ if not usable by clerics, then restrict from all cleric kits

./ if usable by druids, make usable by all multi cleric classes

./ if not usable by druids, then restrict from totemic

./ make all weapons usable by all classes 

./ make all armor usable by:
	- clerics
	- fighter/clerics
	- cleric/thieves
	- cleric/mages
	- ranger/clerics
	- (in fact, all divine classes)

./ make plate mail unusable by helm, lathander, totemic, shapeshifter

./ make chain mail unusable by lathander, totemic, shapeshifter

change clubs' item type from maces to... quarterstaff/26?

./ OR: change maces' item type to morning star/22

./ deal with swords (change long swords & scimitars to small sword/19?)

./ check variables:
	- if plate = 1 -> assign talos
	- if plate = 0 then:
	 -- if chain = 1 -> assign helm
	 -- if chain = 0 -> assign lathander
	- if large blades = 0 -> 181 vs. large swords and halberds
	- if medium blades = 0 -> 181 vs. small swords
	- if blunt = 0 -> 181 vs. maces, morning stars, hammers, flails
	- if bows = 0 -> 181 vs. bows and arrows
	- if xbows = 0 -> 181 vs. xbows and bolts

./ and patch weapprof also!

./ give SC druids the totemic flag

./ give multi druids the totemic flag

./ give mystics the shapeshifter flag

./ give occultists the beast_friend flag??

make 'natural' plate/chain usable by totemic (static list?)

./ apply 181 vs. armor to beast lord (vanilla shapeshifter)

what about shields??

*/ 

//copy marker file___________________________________________________________________
//
COPY ~faiths_and_powers/lib/markers/d5_fnp_usability.d5~ ~override~ 
//___________________________________________________________________________________


//acolyte bonuses____________________________________________________________________
//
COPY ~faiths_and_powers/kits/misc/b_lor.spl~ ~override~
	SAY NAME1 @6
	SAY UNIDENTIFIED_DESC @6
COPY ~faiths_and_powers/kits/misc/b_sp1.spl~ ~override~
	SAY NAME1 @6
	SAY UNIDENTIFIED_DESC @6
COPY ~faiths_and_powers/kits/misc/b_sp2.spl~ ~override~
	SAY NAME1 @6
	SAY UNIDENTIFIED_DESC @6
COPY ~faiths_and_powers/kits/misc/b_sp3.spl~ ~override~
	SAY NAME1 @6
	SAY UNIDENTIFIED_DESC @6
COPY ~faiths_and_powers/kits/misc/b_sp4.spl~ ~override~
	SAY NAME1 @6
	SAY UNIDENTIFIED_DESC @6
COPY ~faiths_and_powers/kits/misc/b_sp5.spl~ ~override~
	SAY NAME1 @6
	SAY UNIDENTIFIED_DESC @6
COPY ~faiths_and_powers/kits/misc/b_sp6.spl~ ~override~
	SAY NAME1 @6
	SAY UNIDENTIFIED_DESC @6
COPY ~faiths_and_powers/kits/misc/b_sp7.spl~ ~override~
	SAY NAME1 @6
	SAY UNIDENTIFIED_DESC @6
//___________________________________________________________________________________


//acolytes extra spells_____________________________________________________________
//
ACTION_PHP_EACH d5_fnp_kit_class_access AS kit => class BEGIN
  ACTION_IF (~%class%~ STRING_EQUAL_CASE ~ACOLYTE~) BEGIN
    COPY_EXISTING ~%kit%.2da~ ~override~
	  LPM remove_blank_lines
	  APPEND_FILE ~faiths_and_powers/kits/misc/morespells.txt~
	BUT_ONLY
  END
END
//___________________________________________________________________________________


//apply cleric restrictions to talos kit____________________________________________
//
COPY_EXISTING_REGEXP GLOB ~.*\.itm~ ~override~
  PATCH_IF (~%SOURCE_SIZE%~ > ~0x71~) BEGIN
    READ_BYTE    0x1e cleric   											// cleric class usability
	READ_BYTE    0x29 c_kits											// cleric kit flags
    PATCH_IF ((~%cleric%~ BAND ~0b10000000~) = ~0b10000000~) BEGIN 		// if *NOT usable* by clerics
	  WRITE_BYTE 0x29 (~%c_kits%~ BOR ~0b00000111~) 					// set same flag for all cleric kits
	END
  END
BUT_ONLY_IF_IT_CHANGES
//__________________________________________________________________________________

//usable by druid = usable by multi clerics; & no 319 effects_______________________
//
COPY_EXISTING_REGEXP GLOB ~.*\.itm~ ~override~
  PATCH_IF (~%SOURCE_SIZE%~ > ~0x71~) BEGIN
	READ_BYTE 0x21 druid  												// druid class usability
	READ_BYTE 0x1f m_class  											// cleric multi usability
	PATCH_IF ((~%druid%~ BOR ~0b10111111~) = ~0b10111111~) BEGIN 		// if *IS usable* by druids
	  WRITE_BYTE 0x1f (~%m_class%~ BAND ~0b00111000~) 					// make usable by multi clerics
	  LPF DELETE_EFFECT INT_VAR match_opcode = 319 match_parameter1 = 11 match_timing = 2 END
	END
  END
BUT_ONLY_IF_IT_CHANGES
//__________________________________________________________________________________

//give druid class usability to new druids, plus axe/flail/bow______________________
//
COPY_EXISTING_REGEXP GLOB ~.*\.itm~ ~override~
  PATCH_IF (~%SOURCE_SIZE%~ > ~0x71~) BEGIN
	READ_BYTE 	0x21 druid 												// druid class usability
	READ_BYTE 	0x29 d_kits												// druid kit flags
	PATCH_IF ((~%druid%~ BAND ~0b01000000~) = ~0b01000000~) BEGIN 		// if *NOT usable* by druids
	  WRITE_BYTE 0x29 (~%d_kits%~ BOR ~0b00001000~) 					// same same flag for totemic
	END
  END	
BUT_ONLY_IF_IT_CHANGES
//__________________________________________________________________________________

//give fighter weapon usability to clerics__________________________________________
//
COPY_EXISTING_REGEXP GLOB ~.*\.itm~ ~override~
  PATCH_IF (~%SOURCE_SIZE%~ > ~0x71~) BEGIN
	READ_BYTE 0x1f fighter 												// fighter usability flag
	READ_BYTE    0x1e c_class
	READ_BYTE    0x1f m_class
	READ_BYTE    0x20 r_class
	READ_BYTE    0x21 d_class
	READ_BYTE    0x29 c_kits
	READ_SHORT   0x1c type
	PATCH_IF ((~%fighter%~ BAND ~0b00100000~) = ~0b00000000~) BEGIN 	// if *IS usable* by fighter/mages (excluding scrolls and wands for now)
	  PATCH_IF (%type% = 2) OR   	//armor
	  		(%type% = 5) OR   	//arrow
			(%type% = 15) OR  	//bow
			(%type% = 16) OR  	//dagger
			(%type% = 18) OR  	//slings
			(%type% = 14) OR  	//bullet
			(%type% = 19) OR  	//small swords
			(%type% = 20) OR  	//large swords
			(%type% = 25) OR  	//axe
			(%type% = 21) OR  	//hammer
			(%type% = 17) OR  	//mace
			(%type% = 22) OR  	//morningstars
			(%type% = 23) OR  	//flails
			(%type% = 24) OR  	//darts
			(%type% = 26) OR  	//quarterstaff
			(%type% = 27) OR  	//crossbows
			(%type% = 31) OR  	//bolts
			(%type% = 28) OR  	//hand-to-hand
			(%type% = 29) OR  	//spear
			(%type% = 57) OR  	//greatswords
			(%type% = 69) OR  	//bastard swords
			(%type% = 30) OR  	//halberds
			(%type% = 44) BEGIN  //clubs
		WRITE_BYTE  0x1e (~%c_class%~ BAND ~0b01111111~) 				// make usable by clerics
		WRITE_BYTE  0x1f (~%m_class%~ BAND ~0b00101000~) 				// make usable by divine multiclasses
		WRITE_BYTE  0x21 (~%r_class%~ BAND ~0b11001111~) 				// make usable by rangers/paladins
		WRITE_BYTE  0x21 (~%d_class%~ BAND ~0b10111111~) 				// make usable by druids
	  END
    END
  END
BUT_ONLY_IF_IT_CHANGES
//__________________________________________________________________________________

//set armor usability for cleric/druid kits_________________________________________
//
COPY_EXISTING_REGEXP GLOB ~^.+\.itm$~ ~override~
  PATCH_IF (SOURCE_SIZE > 0x71) BEGIN
	READ_SHORT 0x1c type
	PATCH_IF (type = 2) BEGIN
	  READ_LONG 0x22 appearance
	  PATCH_IF (appearance = 16691) BEGIN // chain appearance
		WRITE_BYTE 0x29 (~%c_kits%~ BOR ~0b00111100~) 					// restrict from lathander + totemic + shapeshifter
	  END
	  ELSE PATCH_IF (appearance = 16692) BEGIN // plate appearance
		WRITE_BYTE 0x29 (~%c_kits%~ BOR ~0b00111110~) 					// restrict from lat + helm + totemic + shapeshifter
	  END
	END
  END
BUT_ONLY
//__________________________________________________________________________________

//set weapon item type____________________s_________________________________________
//
COPY_EXISTING_REGEXP GLOB ~^.+\.itm$~ ~override~
  PATCH_IF (SOURCE_SIZE > 0x71) BEGIN
	READ_BYTE 0x31 prof
	PATCH_IF (prof = 90) || (prof = 95) BEGIN							// proficiency = longsword/scimitar
	  WRITE_SHORT 0x1c 19												// type = small swords
	END
  END
BUT_ONLY
COPY_EXISTING_REGEXP GLOB ~^.+\.itm$~ ~override~
  PATCH_IF (SOURCE_SIZE > 0x71) BEGIN
	READ_BYTE 0x31 prof
	PATCH_IF (prof = 101) BEGIN											// proficiency = mace
	  WRITE_SHORT 0x1c 22												// type = morning star
	END
  END
BUT_ONLY
COPY_EXISTING_REGEXP GLOB ~^.+\.itm$~ ~override~
  PATCH_IF (SOURCE_SIZE > 0x71) BEGIN
	READ_BYTE 0x31 prof
	PATCH_IF (prof = 115) BEGIN											// proficiency = club
	  WRITE_SHORT 0x1c 17												// type = mace
	END
  END
BUT_ONLY
//__________________________________________________________________________________

//armor and weapon variables________________________________________________________
//
COPY_EXISTING ~kitlist.2da~ ~override~
  COUNT_2DA_COLS num_cols
  READ_2DA_ENTRIES_NOW ~r2en_kitlist~ 9
  TEXT_SPRINT hex_lat 			~04000000~
  TEXT_SPRINT hex_helm 			~02000000~
  TEXT_SPRINT hex_talos 		~01000000~
  TEXT_SPRINT hex_totemic 		~08000000~
  TEXT_SPRINT hex_shapeshifter 	~10000000~
  TEXT_SPRINT hex_avenger		~20000000~
  FOR (row = 3; row < r2en_kitlist; row += 1) BEGIN
	READ_2DA_ENTRY_FORMER ~r2en_kitlist~ row 0 kit_index
	READ_2DA_ENTRY_FORMER ~r2en_kitlist~ row 1 kit_label
	READ_2DA_ENTRY_FORMER ~r2en_kitlist~ row 5 kit_clab
	INNER_ACTION BEGIN
	  COPY ~faiths_and_powers/kits/misc/d5fnpuse.spl~ ~override/d5_u%kit_index%.spl~
	END
	PHP_EACH d5_fnp_usable AS usable => val BEGIN
	  PATCH_IF (VARIABLE_IS_SET $d5_fnp_kit_usable_access(~%usable%~ ~%kit_clab%~)) BEGIN
		SPRINT access $d5_fnp_kit_usable_access(~%usable%~ ~%kit_clab%~)
		PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~CHAIN_ARMOR~) BEGIN
		  PATCH_IF (access = 0) BEGIN
//			TEXT_SPRINT hex_lat ~04000000~
			SET_2DA_ENTRY row 7 9 ~0x%hex_lat%~ 
		  END
		  PATCH_IF (access > 0) BEGIN
//			TEXT_SPRINT hex_helm ~02000000~
			SET_2DA_ENTRY row 7 9 ~0x%hex_helm%~ 
		  END
		END
		PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~PLATE_ARMOR~) BEGIN
		  PATCH_IF (access > 0) BEGIN
//			TEXT_SPRINT hex_talos ~01000000~
			SET_2DA_ENTRY row 7 9 ~0x%hex_talos%~ 
		  END
		END
		PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~SIMPLE_WEAPONS~) BEGIN		// clubs, daggers, staffs, spears, slings, bullets
		  INNER_ACTION BEGIN
			COPY_EXISTING ~weapprof.2da~ override
			  READ_2DA_ENTRIES_NOW weapprof 3
			  COUNT_2DA_COLS cols
			  FOR (col = 0; col < cols - 1; ++col) BEGIN
				READ_2DA_ENTRY_FORMER weapprof 0 col column_name
				PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
				  SET_2DA_ENTRY 16 (col + 1) 3 %access%						//	dagger
				  SET_2DA_ENTRY 18 (col + 1) 3 %access%						//	club
				  SET_2DA_ENTRY 23 (col + 1) 3 %access%						//	quarterstaff
				  SET_2DA_ENTRY 19 (col + 1) 3 %access%						//	spear
				  SET_2DA_ENTRY 28 (col + 1) 3 %access%						//	sling
				  SET_2DA_ENTRY 26 (col + 1) 3 %access%						//	darts
				END
			  END
			BUT_ONLY
		  END
		END
		PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~MEDIUM_SWORDS~) BEGIN		// long swords, short swords, scimitars
		  INNER_ACTION BEGIN
			COPY_EXISTING ~weapprof.2da~ override
			  READ_2DA_ENTRIES_NOW weapprof 3
			  COUNT_2DA_COLS cols
			  FOR (col = 0; col < cols - 1; ++col) BEGIN
				READ_2DA_ENTRY_FORMER weapprof 0 col column_name
				PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
				  SET_2DA_ENTRY 10 (col + 1) 3 %access%					//	long sword
				  SET_2DA_ENTRY 11 (col + 1) 3 %access%					//	short sword
				  SET_2DA_ENTRY 15 (col + 1) 3 %access%					//	scimitar
				END
			  END
			BUT_ONLY
		  END
		  PATCH_IF (access = 0) BEGIN
			INNER_ACTION BEGIN
			  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 19 parameter2 = 0 timing = 9 END
			  BUT_ONLY
			END
		  END
		END
// change 2-hand swords to 57...?
		PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~LARGE_BLADES~) BEGIN		// 2-hand swords, bastard swords, katanas, halberds
		  INNER_ACTION BEGIN
			COPY_EXISTING ~weapprof.2da~ override
			  READ_2DA_ENTRIES_NOW weapprof 3
			  COUNT_2DA_COLS cols
			  FOR (col = 0; col < cols - 1; ++col) BEGIN
				READ_2DA_ENTRY_FORMER weapprof 0 col column_name
				PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
				  SET_2DA_ENTRY 9 (col + 1) 3 %access%						//	bastard sword
				  SET_2DA_ENTRY 13 (col + 1) 3 %access%						//	2-hand sword
				  SET_2DA_ENTRY 14 (col + 1) 3 %access%						//	katana
				  SET_2DA_ENTRY 20 (col + 1) 3 %access%						//	halberd
				END
			  END
			BUT_ONLY
		  END
		  PATCH_IF (access = 0) BEGIN
			INNER_ACTION BEGIN
			  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 20 parameter2 = 0 timing = 9 END
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 30 parameter2 = 0 timing = 9 END
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 57 parameter2 = 0 timing = 9 END
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 69 parameter2 = 0 timing = 9 END
			  BUT_ONLY
			END
		  END
		END
		PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~BLUDGEONS~) BEGIN			// maces, morning stars, flails, war hammers
		  INNER_ACTION BEGIN
			COPY_EXISTING ~weapprof.2da~ override
			  READ_2DA_ENTRIES_NOW weapprof 3
			  COUNT_2DA_COLS cols
			  FOR (col = 0; col < cols - 1; ++col) BEGIN
				READ_2DA_ENTRY_FORMER weapprof 0 col column_name
				PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
				  SET_2DA_ENTRY 17 (col + 1) 3 %access%						// war hammer
				  SET_2DA_ENTRY 21 (col + 1) 3 %access%						// flail/morning star
				  SET_2DA_ENTRY 22 (col + 1) 3 %access%						// mace
				END
			  END
			BUT_ONLY
		  END
		  PATCH_IF (access = 0) BEGIN
			INNER_ACTION BEGIN
			  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 21 parameter2 = 0 timing = 9 END
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 22 parameter2 = 0 timing = 9 END
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 23 parameter2 = 0 timing = 9 END
			  BUT_ONLY
			END
		  END
		END
		PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~AXES~) BEGIN				// axes
		  INNER_ACTION BEGIN
			COPY_EXISTING ~weapprof.2da~ override
			  READ_2DA_ENTRIES_NOW weapprof 3
			  COUNT_2DA_COLS cols
			  FOR (col = 0; col < cols - 1; ++col) BEGIN
				READ_2DA_ENTRY_FORMER weapprof 0 col column_name
				PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
				  SET_2DA_ENTRY 12 (col + 1) 3 %access%						// axe
				END
			  END
			BUT_ONLY
		  END
		  PATCH_IF (access = 0) BEGIN
			INNER_ACTION BEGIN
			  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 25 parameter2 = 0 timing = 9 END
			  BUT_ONLY
			END
		  END
		END
		PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~BOWS~) BEGIN				// long bows, short bows, arrows
		  INNER_ACTION BEGIN
			COPY_EXISTING ~weapprof.2da~ override
			  READ_2DA_ENTRIES_NOW weapprof 3
			  COUNT_2DA_COLS cols
			  FOR (col = 0; col < cols - 1; ++col) BEGIN
				READ_2DA_ENTRY_FORMER weapprof 0 col column_name
				PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
				  SET_2DA_ENTRY 25 (col + 1) 3 %access%						// long bow
				  SET_2DA_ENTRY 26 (col + 1) 3 %access%						// short bow
				END
			  END
			BUT_ONLY
		  END
		  PATCH_IF (access = 0) BEGIN
			INNER_ACTION BEGIN
			  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 15 parameter2 = 0 timing = 9 END
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 5 parameter2 = 0 timing = 9 END
			  BUT_ONLY
			END
		  END
		END
		PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~CROSSBOWS~) BEGIN			// crossbows, bolts
		  INNER_ACTION BEGIN
			COPY_EXISTING ~weapprof.2da~ override
			  READ_2DA_ENTRIES_NOW weapprof 3
			  COUNT_2DA_COLS cols
			  FOR (col = 0; col < cols - 1; ++col) BEGIN
				READ_2DA_ENTRY_FORMER weapprof 0 col column_name
				PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
				  SET_2DA_ENTRY 24 (col + 1) 3 %access%						// crossbow
				END
			  END
			BUT_ONLY
		  END
		  PATCH_IF (access = 0) BEGIN
			INNER_ACTION BEGIN
			  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 27 parameter2 = 0 timing = 9 END
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 31 parameter2 = 0 timing = 9 END
			  BUT_ONLY
			END
		  END
		END
	  END
    END
	PHP_EACH d5_fnp_kit_class_access AS kit => class BEGIN
	  PATCH_IF (~%kit%~ STRING_EQUAL_CASE ~%kit_clab%~) BEGIN
		PATCH_IF (~%class%~ STRING_EQUAL_CASE ~DRUID~) BEGIN
		  SET_2DA_ENTRY row 7 9 ~0x%hex_totemic%~ 
		END
		PATCH_IF (~%class%~ STRING_EQUAL_CASE ~MYSTIC~) BEGIN
		  SET_2DA_ENTRY row 7 9 ~0x%hex_shapeshifter%~ 
		END
		PATCH_IF (~%class%~ STRING_EQUAL_CASE ~OCCULTIST~) BEGIN
		  SET_2DA_ENTRY row 7 9 ~0x%hex_avenger%~ 
		END
	  END
	END
	PATCH_IF ~%kit_clab%~ STRING_EQUAL_CASE ~d5drfi~ BEGIN
	  SET_2DA_ENTRY row 7 9 ~0x%hex_totemic%~ // usability
	END
	PATCH_IF ~%kit_clab%~ STRING_EQUAL_CASE ~d5drma~ BEGIN
	  SET_2DA_ENTRY row 7 9 ~0x%hex_totemic%~ // usability
	END
	PATCH_IF ~%kit_clab%~ STRING_EQUAL_CASE ~d5drth~ BEGIN
	  SET_2DA_ENTRY row 7 9 ~0x%hex_totemic%~ // usability
	END
	PATCH_IF ~%kit_clab%~ STRING_EQUAL_CASE ~d5drra~ BEGIN
	  SET_2DA_ENTRY row 7 9 ~0x%hex_totemic%~ // usability
	END
	PATCH_IF ~%kit_clab%~ STRING_EQUAL_CASE ~d5obst~ BEGIN
	  INNER_ACTION BEGIN
		COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
		  LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 2 parameter2 = 0 timing = 9 END
		BUT_ONLY
	  END
	END
	INNER_ACTION BEGIN
	  ACTION_IF FILE_EXISTS_IN_GAME ~%kit_clab%.2da~ BEGIN
		APPEND ~%kit_clab%.2da~ ~ABILITY1    AP_d5_u%kit_index~
	  END
	END
  END
BUT_ONLY
//__________________________________________________________________________________


/*

//give druid class usability to new druids, plus axe/flail/bow______________________
//
COPY_EXISTING_REGEXP GLOB ~.*\.itm~ ~override~
	PATCH_IF (~%SOURCE_SIZE%~ > ~0x71~) BEGIN
		READ_BYTE 0x21 druid 	// reads the byte containing the druid usability flag
		READ_BYTE 0x29 d_kits
		PATCH_IF ((~%druid%~ BAND ~0b01000000~) = ~0b01000000~) BEGIN // if druid flag set
			WRITE_BYTE 0x29 (~%d_kits%~ BOR ~0b00001000~) // same *unusability* flag for totemic & avenger 
		END
		READ_SHORT  ~0x1c~ type 
		PATCH_IF (type = 23) OR  	   //flail
            	(type = ~25~) OR       //axe
            	(type = ~19~) OR       //small sword
            	(type = ~20~) OR       //large sword
            	(type = ~17~) OR       //mace
            	(type = ~22~) OR       //morning star
            	(type = ~21~) OR       //hammer
            	(type = ~15~) OR       //bow
				(type = ~5~) BEGIN     //arrow
			WRITE_BYTE 0x21 (~%druid%~ BAND ~0b10111111~) // make usable for druids
			WRITE_BYTE 0x29 (~%d_kits%~ BAND ~0b11010111~) // make usable for totemic & avenger
		END
	END
BUT_ONLY
//__________________________________________________________________________________

//give fighter weapon usability to clerics__________________________________________
//
COPY_EXISTING_REGEXP GLOB ~.*\.itm~ ~override~
  PATCH_IF (~%SOURCE_SIZE%~ > ~0x71~) BEGIN
	READ_BYTE 0x1f fighter //reads the byte containing the fighter usability flag
	PATCH_IF ((~%fighter%~ BAND ~0b00100000~) = ~0b00000000~) BEGIN // if *usable* by fighter/mages (excluding scrolls and wands for now)
	  READ_BYTE    0x1e c_class
	  READ_BYTE    0x1f m_class
	  READ_BYTE    0x21 d_class
	  READ_BYTE    0x29 c_kits
	  READ_SHORT   0x1c type //reads the byte containing item type
	  PATCH_IF (%type% = 5) OR   	//arrow
				(%type% = 15) OR  	//bow
				(%type% = 16) OR  	//dagger
				(%type% = 18) OR  	//slings
				(%type% = 14) OR  	//bullet
				(%type% = 19) OR  	//Short Swords
				(%type% = 20) OR  	//Long Swords
				(%type% = 25) OR  	//axe
				(%type% = 21) OR  	//hammer
				(%type% = 17) OR  	//mace
				(%type% = 22) OR  	//morningstars
				(%type% = 23) OR  	//flails
				(%type% = 24) OR  	//darts
				(%type% = 26) OR  	//quarterstaff
				(%type% = 27) OR  	//crossbows
				(%type% = 31) OR  	//bolts
				(%type% = 28) OR  	//hand-to-hand
				(%type% = 29) OR  	//spear
				(%type% = 57) OR  	//greatswords
				(%type% = 69) OR  	//bastard swords
				(%type% = 30) OR  	//halberds
				(%type% = 44) BEGIN  //clubs
		WRITE_BYTE  0x1e (~%c_class%~ BAND ~0b01111111~) // cleric
		WRITE_BYTE  0x1f (~%m_class%~ BAND ~0b00101000~) // multiclasses
//		WRITE_BYTE  0x21 (~%d_class%~ BAND ~0b10111111~) // druids
		WRITE_BYTE  0x29 (~%c_kits%~ BAND ~0b11111001~)  // lathander and helm
	  END
	  PATCH_IF 
				
				
		WRITE_BYTE  0x1e (~%c_class%~ BAND ~0b01111111~) // trueclass cleric (for safety)
		WRITE_BYTE  0x1f (~%m_class%~ BAND ~0b00111111~) // fighter/cleric
		WRITE_BYTE  0x29 (~%c_kits%~ BAND ~0b11111110~)  	// talos
      END
    END
  END
BUT_ONLY_IF_IT_CHANGES
//__________________________________________________________________________________

//apply cleric restrictions to talos kit____________________________________________
//
COPY_EXISTING_REGEXP GLOB ~.*\.itm~ ~override~ //copies all item files
  PATCH_IF (~%SOURCE_SIZE%~ > ~0x71~) BEGIN
    READ_BYTE    0x1e cleric   //reads the byte containing the cleric usability flag
	READ_BYTE    0x29 c_kits
    PATCH_IF ((~%cleric%~ BAND ~0b10000000~) = ~0b10000000~) BEGIN // if *NOT usable* by clerics
	  WRITE_BYTE 0x29 (~%c_kits%~ BOR ~0b00000001~) // set same flag for talos
	END
  END
BUT_ONLY_IF_IT_CHANGES
//__________________________________________________________________________________

//remove splint/plate from single-class clerics_____________________________________
//
COPY_EXISTING_REGEXP GLOB ~.*\.itm~ ~override~ //copies all item files
  PATCH_IF (~%SOURCE_SIZE%~ > ~0x71~) BEGIN //
    READ_BYTE    0x1e bard 	//reads the byte containing the bard usability flag
    PATCH_IF ((~%bard%~ BAND ~0b01000000~) = ~0b01000000~) BEGIN // if *NOT usable* by Bards
      READ_BYTE    0x1e c_class
      READ_BYTE    0x1f m_class
	  READ_BYTE    0x29 c_kits
      READ_SHORT   0x1c type    	//reads the byte containing item type
      PATCH_IF (~%type%~ = ~2~) OR       //armor
               (~%type%~ = ~63~) OR       //splint
               (~%type%~ = ~64~) OR       //plate
               (~%type%~ = ~65~) OR       //full plate
               (~%type%~ = ~68~) BEGIN    //scale
		WRITE_BYTE    0x1e (~%c_class%~ BOR ~0b10000000~)  // unusable by clerics
		WRITE_BYTE    0x1f (~%m_class%~ BOR ~0b00000111~)  // unusable by non-fighter cleric multiclasses
      END
    END
  END
BUT_ONLY_IF_IT_CHANGES
//__________________________________________________________________________________

//apply cleric restrictions to lat/helm kits________________________________________
//
COPY_EXISTING_REGEXP GLOB ~.*\.itm~ ~override~ //copies all item files
  PATCH_IF (~%SOURCE_SIZE%~ > ~0x71~) BEGIN
    READ_BYTE    0x1e cleric   //reads the byte containing the cleric usability flag
	READ_BYTE    0x29 c_kits
    PATCH_IF ((~%bard%~ BAND ~0b10000000~) = ~0b10000000~) BEGIN // if *NOT usable* by clerics
	  WRITE_BYTE 0x29 (~%c_kits%~ BOR ~0b00000110~) // set same flag for lathander and helm
	END
  END
BUT_ONLY_IF_IT_CHANGES
//__________________________________________________________________________________

//limit acolytes to light armors____________________________________________________
//
COPY_EXISTING_REGEXP GLOB ~.*\.itm~ ~override~ //copies all item files
  PATCH_IF (~%SOURCE_SIZE%~ > ~0x71~) BEGIN
	READ_SHORT 0x1c type 	//reads the byte containing item type
	PATCH_IF (%type% = 2) BEGIN      //armor
	  READ_BYTE 0x2b stalker 		//reads the byte containing the stalker usability flag
	  PATCH_IF ((~%stalker%~ BAND ~0b00000001~) = ~0b00000001~) BEGIN // if *NOT usable* by Stalkers
		READ_BYTE 0x29 ~kits~
		WRITE_BYTE 0x29 (~%kits%~ BOR ~0b00000100~) // set unusable by lathander
	  END
	END
  END
BUT_ONLY_IF_IT_CHANGES
//__________________________________________________________________________________

//usable by druid = usable by multi clerics; & no 319 effects_______________________
//
COPY_EXISTING_REGEXP GLOB ~.*\.itm~ ~override~ //copies all item files
  PATCH_IF (~%SOURCE_SIZE%~ > ~0x71~) BEGIN
	READ_BYTE 0x21 druid  // reads the byte containing the druid usability flag
	READ_BYTE 0x1f m_class  //reads the byte containing the multi cleric usability flags
	PATCH_IF ((~%druid%~ BOR ~0b10111111~) = ~0b10111111~) BEGIN // if *IS usable* by druids
	  WRITE_BYTE 0x1f (~%m_class%~ BAND ~0b00111000~) // make usable by multi clerics
	  LPF DELETE_EFFECT INT_VAR match_opcode = 319 match_parameter1 = 11 match_timing = 2 END
	END
  END
BUT_ONLY_IF_IT_CHANGES
//__________________________________________________________________________________


//Change base class proficiencies___________________________________________________
//Appends weapprof  1 pips in 'simple' weapons...   Reg Cleric
COPY_EXISTING ~weapprof.2da~ ~override~
  SET_2DA_ENTRY  3 6 1 1                        //1 pip in largeswords
  SET_2DA_ENTRY  4 6 1 1                        //1 pip in smallswords
  SET_2DA_ENTRY  5 6 1 1                       //1 pip in bow
  SET_2DA_ENTRY  6 6 1 1                        //1 pip in spears (broad)
  SET_2DA_ENTRY  7 6 1 1                        //1 pip in Blunt
  SET_2DA_ENTRY  8 6 1 1                       //1 pip in Spiked
  SET_2DA_ENTRY  9 6 1 1                        //1 pip in axe
  SET_2DA_ENTRY  10 6 1 1                       //1 pip in missle
  SET_2DA_ENTRY  13 6 1 1                       //1 pip in shortsword
  SET_2DA_ENTRY  18 6 1 1                       //1 pip dagger
  SET_2DA_ENTRY  19 6 1 1                       //1 pip warhammer
  SET_2DA_ENTRY  20 6 1 1                       //1 pip club
  SET_2DA_ENTRY  21 6 1 1                       //1 pip spear
  SET_2DA_ENTRY  23 6 1 1                       //1 pip Flail_Morningstar
  SET_2DA_ENTRY  24 6 1 1                       //1 pip mace
  SET_2DA_ENTRY  25 6 1 1                       //1 pip quarterstaff
  SET_2DA_ENTRY  26 6 1 1                       //1 pip crossbow
  SET_2DA_ENTRY  29 6 1 1                       //1 pip darts
  SET_2DA_ENTRY  30 6 1 1                       //1 pip slings
  SET_2DA_ENTRY  31 6 1 1                       //2 pip 2 handed style
  SET_2DA_ENTRY  32 6 1 1                       //2 pip sword and shield
  SET_2DA_ENTRY  33 6 1 1                       //2 pip single weapon
  SET_2DA_ENTRY  34 6 1 1                       //3 weapon style
BUT_ONLY_IF_IT_CHANGES

//Appends weapprof  1 pips in 'simple' weapons...   Reg Lath
COPY_EXISTING ~weapprof.2da~ ~override~
  SET_2DA_ENTRY  3 50 1 1                        //1 pip in largeswords
  SET_2DA_ENTRY  4 50 1 1                        //1 pip in smallswords
  SET_2DA_ENTRY  5 50 1 1                       //1 pip in bow
  SET_2DA_ENTRY  6 50 1 1                        //1 pip in spears (broad)
  SET_2DA_ENTRY  7 50 1 1                        //1 pip in Blunt
  SET_2DA_ENTRY  8 50 1 1                       //1 pip in Spiked
  SET_2DA_ENTRY  9 50 1 1                        //1 pip in axe
  SET_2DA_ENTRY  10 50 1 1                       //1 pip in missle
  SET_2DA_ENTRY  13 50 1 1                       //1 pip in shortsword
  SET_2DA_ENTRY  18 50 1 1                       //1 pip dagger
  SET_2DA_ENTRY  19 50 1 1                       //1 pip warhammer
  SET_2DA_ENTRY  20 50 1 1                       //1 pip club
  SET_2DA_ENTRY  21 50 1 1                       //1 pip spear
  SET_2DA_ENTRY  23 50 1 1                       //1 pip Flail_Morningstar
  SET_2DA_ENTRY  24 50 1 1                       //1 pip mace
  SET_2DA_ENTRY  25 50 1 1                       //1 pip quarterstaff
  SET_2DA_ENTRY  26 50 1 1                       //1 pip crossbow
  SET_2DA_ENTRY  29 50 1 1                       //1 pip darts
  SET_2DA_ENTRY  30 50 1 1                       //1 pip slings
  SET_2DA_ENTRY  31 50 1 1                       //2 pip 2 handed style
  SET_2DA_ENTRY  32 50 1 1                       //2 pip sword and shield
  SET_2DA_ENTRY  33 50 1 1                       //2 pip single weapon
  SET_2DA_ENTRY  34 50 1 1                       //3 weapon style
BUT_ONLY_IF_IT_CHANGES

//Appends weapprof  1 pips in 'simple' weapons...   Reg Helm
COPY_EXISTING ~weapprof.2da~ ~override~
  SET_2DA_ENTRY  3 49 1 1                        //1 pip in largeswords
  SET_2DA_ENTRY  4 49 1 1                        //1 pip in smallswords
  SET_2DA_ENTRY  5 49 1 1                       //1 pip in bow
  SET_2DA_ENTRY  6 49 1 1                        //1 pip in spears (broad)
  SET_2DA_ENTRY  7 49 1 1                        //1 pip in Blunt
  SET_2DA_ENTRY  8 49 1 1                       //1 pip in Spiked
  SET_2DA_ENTRY  9 49 1 1                        //1 pip in axe
  SET_2DA_ENTRY  10 49 1 1                       //1 pip in missle
  SET_2DA_ENTRY  13 49 1 1                       //1 pip in shortsword
  SET_2DA_ENTRY  18 49 1 1                       //1 pip dagger
  SET_2DA_ENTRY  19 49 1 1                       //1 pip warhammer
  SET_2DA_ENTRY  20 49 1 1                       //1 pip club
  SET_2DA_ENTRY  21 49 1 1                       //1 pip spear
  SET_2DA_ENTRY  23 49 1 1                       //1 pip Flail_Morningstar
  SET_2DA_ENTRY  24 49 1 1                       //1 pip mace
  SET_2DA_ENTRY  25 49 1 1                       //1 pip quarterstaff
  SET_2DA_ENTRY  26 49 1 1                       //1 pip crossbow
  SET_2DA_ENTRY  29 49 1 1                       //1 pip darts
  SET_2DA_ENTRY  30 49 1 1                       //1 pip slings
  SET_2DA_ENTRY  31 49 1 1                       //2 pip 2 handed style
  SET_2DA_ENTRY  32 49 1 1                       //2 pip sword and shield
  SET_2DA_ENTRY  33 49 1 1                       //2 pip single weapon
  SET_2DA_ENTRY  34 49 1 1                       //3 weapon style
BUT_ONLY_IF_IT_CHANGES

//Appends weapprof  1 pips in 'simple' weapons...   Reg Talos
COPY_EXISTING ~weapprof.2da~ ~override~
  SET_2DA_ENTRY  3 48 1 1                        //1 pip in largeswords
  SET_2DA_ENTRY  4 48 1 1                        //1 pip in smallswords
  SET_2DA_ENTRY  5 48 1 1                       //1 pip in bow
  SET_2DA_ENTRY  6 48 1 1                        //1 pip in spears (broad)
  SET_2DA_ENTRY  7 48 1 1                        //1 pip in Blunt
  SET_2DA_ENTRY  8 48 1 1                       //1 pip in Spiked
  SET_2DA_ENTRY  9 48 1 1                        //1 pip in axe
  SET_2DA_ENTRY  10 48 1 1                       //1 pip in missle
  SET_2DA_ENTRY  13 48 1 1                       //1 pip in shortsword
  SET_2DA_ENTRY  18 48 1 1                       //1 pip dagger
  SET_2DA_ENTRY  19 48 1 1                       //1 pip warhammer
  SET_2DA_ENTRY  20 48 1 1                       //1 pip club
  SET_2DA_ENTRY  21 48 1 1                       //1 pip spear
  SET_2DA_ENTRY  23 48 1 1                       //1 pip Flail_Morningstar
  SET_2DA_ENTRY  24 48 1 1                       //1 pip mace
  SET_2DA_ENTRY  25 48 1 1                       //1 pip quarterstaff
  SET_2DA_ENTRY  26 48 1 1                       //1 pip crossbow
  SET_2DA_ENTRY  29 48 1 1                       //1 pip darts
  SET_2DA_ENTRY  30 48 1 1                       //1 pip slings
  SET_2DA_ENTRY  31 48 1 1                       //2 pip 2 handed style
  SET_2DA_ENTRY  32 48 1 1                       //2 pip sword and shield
  SET_2DA_ENTRY  33 48 1 1                       //2 pip single weapon
  SET_2DA_ENTRY  34 48 1 1                       //3 weapon style
BUT_ONLY_IF_IT_CHANGES

//Fighter Cleric 2 pips
COPY_EXISTING ~weapprof.2da~ ~override~
  SET_2DA_ENTRY  3 13 1 2                        //1 pip in largeswords
  SET_2DA_ENTRY  4 13 1 2                        //1 pip in smallswords
  SET_2DA_ENTRY  5 13 1 2                       //1 pip in bow
  SET_2DA_ENTRY  6 13 1 2                        //1 pip in spears (broad)
  SET_2DA_ENTRY  7 13 1 2                        //1 pip in Blunt
  SET_2DA_ENTRY  8 13 1 2                       //1 pip in Spiked
  SET_2DA_ENTRY  9 13 1 2                        //1 pip in axe
  SET_2DA_ENTRY  10 13 1 2                       //1 pip in missle
  SET_2DA_ENTRY  11 13 1 2                       //1 Bastard Swd
  SET_2DA_ENTRY  12 13 1 2                       //1 longsword
  SET_2DA_ENTRY  13 13 1 2                       //1 pip in shortsword
  SET_2DA_ENTRY  14 13 1 2                       //1 pip in axe
  SET_2DA_ENTRY  15 13 1 2                       //1 pip in 2 hand
  SET_2DA_ENTRY  16 13 1 2                       //1 pip in katana
  SET_2DA_ENTRY  17 13 1 2                       //1 pip in simitar
  SET_2DA_ENTRY  18 13 1 2                       //1 pip dagger
  SET_2DA_ENTRY  21 13 1 2                       //1 pip spear
  SET_2DA_ENTRY  22 13 1 2                       //1 pip halbard
  SET_2DA_ENTRY  26 13 1 2                       //1 pip crossbow
  SET_2DA_ENTRY  27 13 1 2                       //1 pip longbow
  SET_2DA_ENTRY  28 13 1 2                       //1 pip shortbow
  SET_2DA_ENTRY  29 13 1 2                       //1 pip darts
  SET_2DA_ENTRY  31 13 1 2                       //2 pip 2 handed style
  SET_2DA_ENTRY  32 13 1 2                       //2 pip sword and shield
  SET_2DA_ENTRY  33 13 1 2                       //2 pip single weapon
  SET_2DA_ENTRY  34 13 1 3                       //3 weapon style
BUT_ONLY_IF_IT_CHANGES
//Cleric Mage
COPY_EXISTING ~weapprof.2da~ ~override~
  SET_2DA_ENTRY  3 17 1 1                        //1 pip in largeswords
  SET_2DA_ENTRY  4 17 1 1                        //1 pip in smallswords
  SET_2DA_ENTRY  5 17 1 1                       //1 pip in bow
  SET_2DA_ENTRY  6 17 1 1                        //1 pip in spears (broad)
  SET_2DA_ENTRY  7 17 1 1                        //1 pip in Blunt
  SET_2DA_ENTRY  8 17 1 1                       //1 pip in Spiked
  SET_2DA_ENTRY  9 17 1 1                        //1 pip in axe
  SET_2DA_ENTRY  10 17 1 1                       //1 pip in missle
  SET_2DA_ENTRY  13 17 1 1                       //1 pip in shortsword
  SET_2DA_ENTRY  18 17 1 1                       //1 pip dagger
  SET_2DA_ENTRY  19 17 1 1                       //1 pip warhammer
  SET_2DA_ENTRY  20 17 1 1                       //1 pip club
  SET_2DA_ENTRY  21 17 1 1                       //1 pip spear
  SET_2DA_ENTRY  23 17 1 1                       //1 pip Flail_Morningstar
  SET_2DA_ENTRY  24 17 1 1                       //1 pip mace
  SET_2DA_ENTRY  25 17 1 1                       //1 pip quarterstaff
  SET_2DA_ENTRY  26 17 1 1                       //1 pip crossbow
  SET_2DA_ENTRY  29 17 1 1                       //1 pip darts
  SET_2DA_ENTRY  30 17 1 1                       //1 pip slings
  SET_2DA_ENTRY  31 17 1 1                       //2 pip 2 handed style
  SET_2DA_ENTRY  32 17 1 1                       //2 pip sword and shield
  SET_2DA_ENTRY  33 17 1 1                       //2 pip single weapon
  SET_2DA_ENTRY  34 17 1 1                       //3 weapon style
BUT_ONLY_IF_IT_CHANGES
//  cleric thief
COPY_EXISTING ~weapprof.2da~ ~override~
  SET_2DA_ENTRY  3 18 1 1                        //1 pip in largeswords
  SET_2DA_ENTRY  4 18 1 1                        //1 pip in smallswords
  SET_2DA_ENTRY  5 18 1 1                       //1 pip in bow
  SET_2DA_ENTRY  6 18 1 1                        //1 pip in spears (broad)
  SET_2DA_ENTRY  7 18 1 1                        //1 pip in Blunt
  SET_2DA_ENTRY  8 18 1 1                       //1 pip in Spiked
  SET_2DA_ENTRY  9 18 1 1                        //1 pip in axe
  SET_2DA_ENTRY  10 18 1 1                       //1 pip in missle
  SET_2DA_ENTRY  12 18 1 1                       //1 longsword
  SET_2DA_ENTRY  13 18 1 1                       //1 pip in shortsword
  SET_2DA_ENTRY  16 18 1 1                       //1 pip in katana
  SET_2DA_ENTRY  17 18 1 1                       //1 pip in simitar
  SET_2DA_ENTRY  18 18 1 1                       //1 pip dagger
  SET_2DA_ENTRY  20 18 1 1                       //1 pip club
  SET_2DA_ENTRY  25 18 1 1                       //1 pip quarterstaff
  SET_2DA_ENTRY  26 18 1 1                       //1 pip crossbow
  SET_2DA_ENTRY  28 18 1 1                       //1 pip shortbow
  SET_2DA_ENTRY  29 18 1 1                       //1 pip darts
  SET_2DA_ENTRY  30 18 1 1                       //1 pip slings
  SET_2DA_ENTRY  31 18 1 1                       //2 pip 2 handed style
  SET_2DA_ENTRY  32 18 1 1                       //2 pip sword and shield
  SET_2DA_ENTRY  33 18 1 1                       //2 pip single weapon
  SET_2DA_ENTRY  34 18 1 1                       //3 weapon style
BUT_ONLY_IF_IT_CHANGES
//Fighter/Mage/Cleric 2 pips
COPY_EXISTING ~weapprof.2da~ ~override~
  SET_2DA_ENTRY  3 20 1 2                        //1 pip in largeswords
  SET_2DA_ENTRY  4 20 1 2                        //1 pip in smallswords
  SET_2DA_ENTRY  5 20 1 2                       //1 pip in bow
  SET_2DA_ENTRY  6 20 1 2                        //1 pip in spears (broad)
  SET_2DA_ENTRY  7 20 1 2                        //1 pip in Blunt
  SET_2DA_ENTRY  8 20 1 2                       //1 pip in Spiked
  SET_2DA_ENTRY  9 20 1 2                        //1 pip in axe
  SET_2DA_ENTRY  10 20 1 2                       //1 pip in missle
  SET_2DA_ENTRY  11 20 1 2                       //1 Bastard Swd
  SET_2DA_ENTRY  12 20 1 2                       //1 longsword
  SET_2DA_ENTRY  13 20 1 2                       //1 pip in shortsword
  SET_2DA_ENTRY  14 20 1 2                       //1 pip in axe
  SET_2DA_ENTRY  15 20 1 2                       //1 pip in 2 hand
  SET_2DA_ENTRY  16 20 1 2                       //1 pip in katana
  SET_2DA_ENTRY  17 20 1 2                       //1 pip in simitar
  SET_2DA_ENTRY  18 20 1 2                       //1 pip dagger
  SET_2DA_ENTRY  21 20 1 2                       //1 pip spear
  SET_2DA_ENTRY  22 20 1 2                       //1 pip halbard
  SET_2DA_ENTRY  26 20 1 2                       //1 pip crossbow
  SET_2DA_ENTRY  27 20 1 2                       //1 pip longbow
  SET_2DA_ENTRY  28 20 1 2                       //1 pip shortbow
  SET_2DA_ENTRY  29 20 1 2                       //1 pip darts
  SET_2DA_ENTRY  31 20 1 2                       //2 pip 2 handed style
  SET_2DA_ENTRY  32 20 1 2                       //2 pip sword and shield
  SET_2DA_ENTRY  33 20 1 2                       //2 pip single weapon
  SET_2DA_ENTRY  34 20 1 3                       //3 weapon style
BUT_ONLY_IF_IT_CHANGES

//Cleric Ranger
COPY_EXISTING ~weapprof.2da~ ~override~
  SET_2DA_ENTRY  3 21 1 2                        //2 pip in largeswords
  SET_2DA_ENTRY  4 21 1 2                        //2 pip in smallswords
  SET_2DA_ENTRY  5 21 1 2                       //2 pip in bow
  SET_2DA_ENTRY  6 21 1 2                        //2 pip in spears (broad)
  SET_2DA_ENTRY  7 21 1 2                        //2 pip in Blunt
  SET_2DA_ENTRY  8 21 1 2                       //2 pip in Spiked
  SET_2DA_ENTRY  9 21 1 2                        //2 pip in axe
  SET_2DA_ENTRY  10 21 1 2                       //2 pip in missle
  SET_2DA_ENTRY  11 21 1 2                       //2 Bastard Swd
  SET_2DA_ENTRY  12 21 1 2                       //2 longsword
  SET_2DA_ENTRY  13 21 1 2                       //2 pip in shortsword
  SET_2DA_ENTRY  14 21 1 2                       //2 pip in axe
  SET_2DA_ENTRY  15 21 1 2                       //2 pip in 2 hand
  SET_2DA_ENTRY  16 21 1 2                       //2 pip in katana
  SET_2DA_ENTRY  17 21 1 2                       //2 pip in simitar
  SET_2DA_ENTRY  18 21 1 2                       //2 pip dagger
  SET_2DA_ENTRY  19 21 1 2                       //2 pip warhammer
  SET_2DA_ENTRY  20 21 1 2                       //2 pip club
  SET_2DA_ENTRY  21 21 1 2                       //2 pip spear
  SET_2DA_ENTRY  22 21 1 2                       //2 pip halbard
  SET_2DA_ENTRY  23 21 1 2                       //2 pip Flail_Morningstar
  SET_2DA_ENTRY  24 21 1 2                       //2 pip mace
  SET_2DA_ENTRY  25 21 1 2                       //2 pip quarterstaff
  SET_2DA_ENTRY  26 21 1 2                       //2 pip crossbow
  SET_2DA_ENTRY  27 21 1 2                       //2 pip longbow
  SET_2DA_ENTRY  28 21 1 2                       //2 pip shortbow
  SET_2DA_ENTRY  29 21 1 2                       //2 pip darts
  SET_2DA_ENTRY  30 21 1 2                       //2 pip slings
  SET_2DA_ENTRY  31 21 1 2                       //2 pip 2 handed style
  SET_2DA_ENTRY  32 21 1 2                       //2 pip sword and shield
  SET_2DA_ENTRY  33 21 1 2                       //2 pip single weapon
  SET_2DA_ENTRY  34 21 1 3                       //3 weapon style
BUT_ONLY_IF_IT_CHANGES
//__________________________________________________________________________________


//handle acolytes___________________________________________________________________
//
COPY ~faiths_and_powers/kits/acolytes/b_lor.spl~ ~override~
LAM ~READ_FNP_KIT_INFO~

COPY_EXISTING ~kitlist.2da~ ~override~
  COUNT_2DA_COLS num_cols
  READ_2DA_ENTRIES_NOW ~r2en_kitlist~ 9
  FOR (row = 3; row < r2en_kitlist; row += 1) BEGIN
	READ_2DA_ENTRY_FORMER ~r2en_kitlist~ row 5 kit_clab
	READ_2DA_ENTRY_FORMER ~r2en_kitlist~ row 1 kit_name
	READ_2DA_ENTRY_FORMER ~r2en_kitlist~ row 8 class_num
	PATCH_IF (class_num == 3) BEGIN // cleric
	  PATCH_IF (VARIABLE_IS_SET $d5_fnp_kit_class_access(~ACOLYTE~ ~%kit_clab%~)) BEGIN
		TEXT_SPRINT access $d5_fnp_kit_class_access(~ACOLYTE~ ~%kit_clab%~)
		PATCH_IF (IS_AN_INT access && access == 1) BEGIN
		  TEXT_SPRINT hex_lat ~04000000~
		  SET_2DA_ENTRY_LATER ~s2el_kitlist~ row 7 ~0x%hex_lat%~ // usability
		END
		INNER_ACTION BEGIN
		  COPY_EXISTING ~%kit_clab%.2da~ ~override~
			LPM remove_blank_lines
			APPEND_FILE ~faiths_and_powers/kits/misc/morespells.txt~
		  BUT_ONLY
		  ACTION_IF NOT (~%kit_name%~ STRING_EQUAL_CASE ~B_PRIEST_TEMPUS~) BEGIN
			COPY_EXISTING ~hpclass.2da~ ~override~
			  REPLACE_TEXTUALLY ~^\(%kit_name%[ %TAB%]+\).+$~ ~\1HPROG~
			BUT_ONLY
		  END
		END
      END
	  PATCH_FOR_EACH multiclass IN ~CLERIC~ ~CLERIC_THIEF~ ~CLERIC_MAGE~ ~F_M_C~ BEGIN
		PATCH_IF (VARIABLE_IS_SET $d5_fnp_kit_class_access(~%multiclass%~ ~%kit_clab%~)) BEGIN
		  TEXT_SPRINT access $d5_fnp_kit_class_access(~%multiclass%~ ~%kit_clab%~)
		  PATCH_IF (IS_AN_INT access && access == 1) BEGIN
			TEXT_SPRINT hex_helm ~02000000~
			SET_2DA_ENTRY_LATER ~s2el_kitlist~ row 7 ~0x%hex_helm%~ // usability
		  END
		END
	  END
		PATCH_IF (VARIABLE_IS_SET $d5_fnp_kit_class_access(~FIGHTER_CLERIC~ ~%kit_clab%~)) BEGIN
		  TEXT_SPRINT access $d5_fnp_kit_class_access(~FIGHTER_CLERIC~ ~%kit_clab%~)
		  PATCH_IF (IS_AN_INT access && access == 1) BEGIN
			TEXT_SPRINT hex_talos ~01000000~
			SET_2DA_ENTRY_LATER ~s2el_kitlist~ row 7 ~0x%hex_talos%~ // usability
		  END
		END
    END
    SET_2DA_ENTRIES_NOW ~s2el_kitlist~ 9
  END
BUT_ONLY
  
/*
COPY_EXISTING ~kitlist.2da~ ~override~
	COUNT_2DA_ROWS ~9~ "rows"
	FOR ( index = 3 ; index < rows ; index = index + 1 ) BEGIN
		READ_2DA_ENTRY %index% 5 9 kit_clab
		READ_2DA_ENTRY %index% 1 9 kit_name
		READ_2DA_ENTRY %index% 8 9 class
		DEFINE_ASSOCIATIVE_ARRAY d5_fnp_usability BEGIN "%kit_clab%" , "%kit_name%" => "%class%" END
	END
BUT_ONLY
ACTION_PHP_EACH d5_fnp_usability AS sam => iam BEGIN
//  ACTION_IF (%iam% = 3) BEGIN //.................................................clerics
	ACTION_PHP_EACH d5_fnp_classes AS class => val BEGIN
	  ACTION_IF (VARIABLE_IS_SET $d5_fnp_kit_class_access(~%class%~ ~%sam%~)) BEGIN
		OUTER_TEXT_SPRINT access $d5_fnp_kit_class_access(~%class%~ ~%sam%~)
		ACTION_IF (IS_AN_INT access && access == 1) BEGIN
		  ACTION_IF (~%class%~ STRING_EQUAL_CASE ~acolyte~) BEGIN
			COPY_EXISTING ~kitlist.2da~ ~override~
			  READ_2DA_ENTRIES_NOW ~r2en_kitlist~ 9
			  FOR (row = 1; row < r2en_kitlist; row += 1) BEGIN
				READ_2DA_ENTRY_FORMER ~r2en_kitlist~ row 5 kitclab
				PATCH_IF (~%kitclab%~ STRING_EQUAL_CASE ~%sam%~) BEGIN
				  TEXT_SPRINT acolyte_use ~04000000~
			      SET_2DA_ENTRY %row% 7 9 ~0x%acolyte_use%~
//			      PATCH_PRINT ~%kit% %row%~
				END
			  END
			BUT_ONLY
			COPY_EXISTING ~%sam%.2da~ ~override~
			  LPM remove_blank_lines
			  APPEND_FILE ~faiths_and_powers/kits/misc/morespells.txt~
			BUT_ONLY
			ACTION_IF NOT (~%sam_1%~ STRING_EQUAL_CASE ~B_PRIEST_TEMPUS~) BEGIN
			  COPY_EXISTING ~hpclass.2da~ ~override~
				REPLACE_TEXTUALLY ~^\(%sam_1%[ %TAB%]+\).+$~ ~\1HPROG~
			  BUT_ONLY
			END
		  END
		END
	  END
	END
//  END
END
*/

COPY_EXISTING ~kitlist.2da~ ~override~
 TEXT_SPRINT trueclass_use ~00004000~
  SET_2DA_ENTRY 20 7 9 ~0x%trueclass_use%~
  SET_2DA_ENTRY 21 7 9 ~0x%trueclass_use%~
  SET_2DA_ENTRY 22 7 9 ~0x%trueclass_use%~
BUT_ONLY

//__________________________________________________________________________________
*/



