
//__________________________________________________________________________________
//__________________________________________________________________________________
//
//							F&P ITEM USABILITY
//__________________________________________________________________________________
//__________________________________________________________________________________


//copy marker file___________________________________________________________________
//
COPY ~faiths_and_powers/lib/markers/d5_fnp_usability.d5~ ~override~ 
//___________________________________________________________________________________

/*
// NOTES:

armor:
- talos flag 			= any armor			= 0x01000000
- helm flag 			= leather + chain	= 0x02000000
- lathander flag		= leather only		= 0x04000000

what about druids? 
- totemic flag			= druid... no plate or chain
- shapeshifter flag		= mystic
- avenger/beast_friend	= occultist

./ if not usable by clerics, then restrict from all cleric kits

./ if usable by druids, make usable by all multi cleric classes

./ if not usable by druids, then restrict from totemic

./ make all weapons usable by all classes 

./ make all armor usable by:
	- clerics
	- fighter/clerics
	- cleric/thieves
	- cleric/mages
	- ranger/clerics
	- (in fact, all divine classes)

./ make plate mail unusable by helm, lathander, totemic, shapeshifter

./ make chain mail unusable by lathander, totemic, shapeshifter

./ change maces' item type to morning star/22

./ deal with swords (change long swords & scimitars to small sword/19?)

higher types to work with: 
- 57 = greatswords
- 69 = bastard swords
- 51 = rods (?)
- 44 = clubs

changes: 
- Change clubs from #17 to #26 "quarterstaves." Now clubs can have different usability from maces.
- Change halberds from #30 to #57 "bastard swords." That frees up a 1-handed slot.
- Change spears from #29 to #44 "clubs." Now two 1-handed slots are freed up.
- If IR is not installed, change morning stars to #23 "flails," to match their proficiency.
- If IR is installed, change morning stars to #17 "maces," to match their proficiency. Now three 1-handed slots are freed up.
- Change 2-hand swords from "large swords" to #57 "greatswords."
- Short swords stay as "small swords."
- Long swords stay as "large swords."
- Change bastard swords to #22 "morning star."
- Change scimitar to #29 "spear."
- Change katana to #30 "halberd."

./ check variables:
	- if plate = 1 -> assign talos
	- if plate = 0 then:
	 -- if chain = 1 -> assign helm
	 -- if chain = 0 -> assign lathander
	- if large blades = 0 -> 181 vs. large swords and halberds
	- if medium blades = 0 -> 181 vs. small swords
	- if blunt = 0 -> 181 vs. maces, morning stars, hammers, flails
	- if bows = 0 -> 181 vs. bows and arrows
	- if xbows = 0 -> 181 vs. xbows and bolts

./ and patch weapprof also!

./ give SC druids the totemic flag

./ give multi druids the totemic flag

./ give mystics the shapeshifter flag

./ give occultists the beast_friend flag??

make 'natural' plate/chain usable by totemic (static list?)

./ apply 181 vs. armor to beast lord (vanilla shapeshifter)

what about shields??

*/ 

//copy marker file___________________________________________________________________
//
COPY ~faiths_and_powers/lib/markers/d5_fnp_usability.d5~ ~override~ 
//___________________________________________________________________________________


//acolyte bonuses____________________________________________________________________
//
COPY ~faiths_and_powers/kits/misc/b_lor.spl~ ~override~
	SAY NAME1 @6
	SAY UNIDENTIFIED_DESC @6
COPY ~faiths_and_powers/kits/misc/b_sp1.spl~ ~override~
	SAY NAME1 @6
	SAY UNIDENTIFIED_DESC @6
COPY ~faiths_and_powers/kits/misc/b_sp2.spl~ ~override~
	SAY NAME1 @6
	SAY UNIDENTIFIED_DESC @6
COPY ~faiths_and_powers/kits/misc/b_sp3.spl~ ~override~
	SAY NAME1 @6
	SAY UNIDENTIFIED_DESC @6
COPY ~faiths_and_powers/kits/misc/b_sp4.spl~ ~override~
	SAY NAME1 @6
	SAY UNIDENTIFIED_DESC @6
COPY ~faiths_and_powers/kits/misc/b_sp5.spl~ ~override~
	SAY NAME1 @6
	SAY UNIDENTIFIED_DESC @6
COPY ~faiths_and_powers/kits/misc/b_sp6.spl~ ~override~
	SAY NAME1 @6
	SAY UNIDENTIFIED_DESC @6
COPY ~faiths_and_powers/kits/misc/b_sp7.spl~ ~override~
	SAY NAME1 @6
	SAY UNIDENTIFIED_DESC @6
//___________________________________________________________________________________


//acolytes extra spells_____________________________________________________________
//
ACTION_PHP_EACH d5_fnp_kit_class_access AS kit => class BEGIN
  ACTION_IF (~%class%~ STRING_EQUAL_CASE ~ACOLYTE~) BEGIN
    COPY_EXISTING ~%kit%.2da~ ~override~
	  LPM remove_blank_lines
	  APPEND_FILE ~faiths_and_powers/kits/misc/morespells.txt~
	BUT_ONLY
  END
END
//___________________________________________________________________________________


//apply cleric restrictions to talos kit____________________________________________
//
COPY_EXISTING_REGEXP GLOB ~.*\.itm~ ~override~
  PATCH_IF (~%SOURCE_SIZE%~ > ~0x71~) BEGIN
    READ_BYTE    0x1e cleric   											// cleric class usability
	READ_BYTE    0x29 c_kits											// cleric kit flags
    PATCH_IF ((~%cleric%~ BAND ~0b10000000~) = ~0b10000000~) BEGIN 		// if *NOT usable* by clerics
	  WRITE_BYTE 0x29 (~%c_kits%~ BOR ~0b00000111~) 					// set same flag for all cleric kits
	END
  END
BUT_ONLY
//__________________________________________________________________________________

//usable by druid = usable by multi clerics; & no 319 effects_______________________
//
COPY_EXISTING_REGEXP GLOB ~.*\.itm~ ~override~
  PATCH_IF (~%SOURCE_SIZE%~ > ~0x71~) BEGIN
	READ_BYTE 0x21 druid  												// druid class usability
	READ_BYTE 0x1f m_class  											// cleric multi usability
	PATCH_IF ((~%druid%~ BOR ~0b10111111~) = ~0b10111111~) BEGIN 		// if *IS usable* by druids
	  WRITE_BYTE 0x1f (~%m_class%~ BAND ~0b00111000~) 					// make usable by multi clerics
	  LPF DELETE_EFFECT INT_VAR match_opcode = 319 match_parameter1 = 11 match_timing = 2 END
	END
  END
BUT_ONLY
//__________________________________________________________________________________

//give druid class usability to new druids, plus axe/flail/bow______________________
//
COPY_EXISTING_REGEXP GLOB ~.*\.itm~ ~override~
  PATCH_IF (~%SOURCE_SIZE%~ > ~0x71~) BEGIN
	READ_BYTE 	0x21 druid 												// druid class usability
	READ_BYTE 	0x29 d_kits												// druid kit flags
	PATCH_IF ((~%druid%~ BAND ~0b01000000~) = ~0b01000000~) BEGIN 		// if *NOT usable* by druids
	  WRITE_BYTE 0x29 (~%d_kits%~ BOR ~0b00001000~) 					// same same flag for totemic
	END
  END	
BUT_ONLY
//__________________________________________________________________________________

//give fighter weapon usability to clerics__________________________________________
//
COPY_EXISTING_REGEXP GLOB ~.*\.itm~ ~override~
  PATCH_IF (%SOURCE_SIZE% > 0x71) BEGIN
	READ_BYTE 	 0x1f fighter 											// fighter usability flag
	READ_BYTE    0x1e c_class
	READ_BYTE    0x1f m_class
	READ_BYTE    0x20 r_class
	READ_BYTE    0x21 d_class
	READ_BYTE    0x29 c_kits
	READ_SHORT   0x1c type
	PATCH_IF ((~%fighter%~ BAND ~0b00100000~) = ~0b00000000~) BEGIN 	// if *IS usable* by fighter/mages (excluding scrolls and wands for now)
	  PATCH_IF (%type% = 2) OR   	//armor
	  		(%type% = 5) OR   	//arrow
			(%type% = 15) OR  	//bow
			(%type% = 16) OR  	//dagger
			(%type% = 18) OR  	//slings
			(%type% = 14) OR  	//bullet
			(%type% = 19) OR  	//small swords
			(%type% = 20) OR  	//large swords
			(%type% = 25) OR  	//axe
			(%type% = 21) OR  	//hammer
			(%type% = 17) OR  	//mace
			(%type% = 22) OR  	//morningstars
			(%type% = 23) OR  	//flails
			(%type% = 24) OR  	//darts
			(%type% = 26) OR  	//quarterstaff
			(%type% = 27) OR  	//crossbows
			(%type% = 31) OR  	//bolts
			(%type% = 28) OR  	//hand-to-hand
			(%type% = 29) OR  	//spear
			(%type% = 57) OR  	//greatswords
			(%type% = 69) OR  	//bastard swords
			(%type% = 30) OR  	//halberds
			(%type% = 44) BEGIN  //clubs
		WRITE_BYTE  0x1e (~%c_class%~ BAND ~0b01111111~) 				// make usable by clerics
		WRITE_BYTE  0x1f (~%m_class%~ BAND ~0b00101000~) 				// make usable by divine multiclasses
		WRITE_BYTE  0x21 (~%r_class%~ BAND ~0b11001111~) 				// make usable by rangers/paladins
		WRITE_BYTE  0x21 (~%d_class%~ BAND ~0b10111111~) 				// make usable by druids
		WRITE_BYTE  0x29 (~%c_kits%~ BAND ~0b11000000~) 				// make usable by cleric kits
	  END
    END
  END
BUT_ONLY
//__________________________________________________________________________________

//set armor usability for cleric/druid kits_________________________________________
//
COPY_EXISTING_REGEXP GLOB ~^.+\.itm$~ ~override~
  PATCH_IF (%SOURCE_SIZE% > 0x71) BEGIN
	READ_SHORT 	0x1c type
	READ_BYTE 	0x1f fighter
	READ_BYTE 	0x29 c_kits
	PATCH_IF (type = 2) BEGIN
	  PATCH_IF ((%fighter% BAND 0b00001000) = 0b00000000) BEGIN 	// if *IS usable* by fighters
		WRITE_BYTE 0x29 (%c_kits% BAND 0b11000000) 					// make usable by divines
	  END
	  READ_LONG 0x22 appearance
	  PATCH_IF (appearance = 16691) BEGIN // chain appearance
		WRITE_BYTE 0x29 (%c_kits% BOR  0b00111100) 					// restrict from lathander + totemic + shapeshifter + avenger
	  END
	  ELSE PATCH_IF (appearance = 16692) BEGIN // plate appearance
		WRITE_BYTE 0x29 (%c_kits% BOR 0b00111110) 					// restrict from lat + helm + totemic + shapeshifter + avenger
	  END
	END
  END
BUT_ONLY
//__________________________________________________________________________________

//set weapon item types_____________________________________________________________
//
COPY_EXISTING_REGEXP GLOB ~^.+\.itm$~ ~override~
  PATCH_IF (%SOURCE_SIZE% > 0x71) BEGIN
	READ_SHORT 0x1c type
	PATCH_IF (%type% = 22) BEGIN									// if type = morning star
	  PATCH_IF MOD_IS_INSTALLED ~item_rev.tp2~ ~17~ BEGIN			// if IR weapon changes installed
		WRITE_SHORT 0x1c 23											// change to type = flails
	  END
	  PATCH_IF NOT MOD_IS_INSTALLED ~item_rev.tp2~ ~17~ BEGIN		// if no IR weapon changes
		WRITE_SHORT 0x1c 17											// change to type = maces
	  END
	END
  END
BUT_ONLY

COPY_EXISTING_REGEXP GLOB ~^.+\.itm$~ ~override~
  PATCH_IF (%SOURCE_SIZE% > 0x71) BEGIN
	READ_BYTE 0x31 prof
	PATCH_IF (%prof% = 115) BEGIN									// proficiency = club
	  WRITE_SHORT 0x1c 26											// change to type = staff
	END
	PATCH_IF (%prof% = 99) BEGIN									// proficiency = halberd
	  WRITE_SHORT 0x1c 69											// change to type = bastard swords
	END
	PATCH_IF (%prof% = 98) BEGIN									// proficiency = spear
	  WRITE_SHORT 0x1c 44											// change to type = clubs
	END
	PATCH_IF (%prof% = 93) BEGIN									// proficiency = 2-hand sword
	  WRITE_SHORT 0x1c 57											// change to type = greatswords
	END
	PATCH_IF (%prof% = 89) BEGIN									// proficiency = bastard sword
	  WRITE_SHORT 0x1c 22											// change to type = morning stars
	END
	PATCH_IF (%prof% = 95) BEGIN									// proficiency = scimitar
	  WRITE_SHORT 0x1c 29											// change to type = spears
	END
	PATCH_IF (%prof% = 94) BEGIN									// proficiency = katana
	  WRITE_SHORT 0x1c 30											// change to type = halberds
	END
  END
BUT_ONLY
//__________________________________________________________________________________

//armor and weapon variables________________________________________________________
//
LAM ~READ_FNP_KIT_INFO~

OUTER_TEXT_SPRINT hex_lat 			~04000000~
OUTER_TEXT_SPRINT hex_helm 			~02000000~
OUTER_TEXT_SPRINT hex_talos 		~01000000~
OUTER_TEXT_SPRINT hex_totemic 		~08000000~
OUTER_TEXT_SPRINT hex_shapeshifter 	~10000000~
OUTER_TEXT_SPRINT hex_avenger		~20000000~

COPY_EXISTING ~kitlist.2da~ ~override~
  COUNT_2DA_COLS num_cols
  READ_2DA_ENTRIES_NOW ~r2en_kitlist~ 9
  FOR (row = 3; row < r2en_kitlist; row += 1) BEGIN
   READ_2DA_ENTRY_FORMER ~r2en_kitlist~ row 0 kit_index
   READ_2DA_ENTRY_FORMER ~r2en_kitlist~ row 1 kit_label
   READ_2DA_ENTRY_FORMER ~r2en_kitlist~ row 5 kit_clab
   READ_2DA_ENTRY_FORMER ~r2en_kitlist~ row 8 kit_class
   PATCH_IF (%kit_class% = 3 || %kit_class% = 11 || %kit_class% = 21 || %kit_class% = 8 || %kit_class% = 14 || %kit_class% = 15 || %kit_class% = 18 || %kit_class% = 16) BEGIN
	INNER_ACTION BEGIN
	  COPY ~faiths_and_powers/kits/misc/d5fnpuse.spl~ ~override/d5_u%kit_index%.spl~
	END
	PHP_EACH d5_fnp_usable AS usable => ind BEGIN
	  PATCH_IF (VARIABLE_IS_SET $d5_fnp_kit_usable_access(~%usable%~ ~%kit_clab%~)) BEGIN
		SPRINT access $d5_fnp_kit_usable_access(~%usable%~ ~%kit_clab%~)
		PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~CHAIN_ARMOR~) BEGIN
		  PATCH_IF (access = 0) BEGIN
//			PATCH_IF (%kit_class% = 3 || %kit_class% = 11 || %kit_class% = 21 || %kit_class% = 8 || %kit_class% = 14 || %kit_class% = 15 || %kit_class% = 18 || %kit_class% = 16) BEGIN
				SET_2DA_ENTRY row 7 9 ~0x%hex_lat%~ 
//			END
		  END
		  PATCH_IF (access > 0) BEGIN
//			PATCH_IF (%kit_class% = 3 || %kit_class% = 11 || %kit_class% = 21 || %kit_class% = 8 || %kit_class% = 14 || %kit_class% = 15 || %kit_class% = 18 || %kit_class% = 16) BEGIN
				SET_2DA_ENTRY row 7 9 ~0x%hex_helm%~ 
//			END
		  END
		END
		PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~PLATE_ARMOR~) BEGIN
		  PATCH_IF (access > 0) BEGIN
//			PATCH_IF (%kit_class% = 3 || %kit_class% = 11 || %kit_class% = 21 || %kit_class% = 8 || %kit_class% = 14 || %kit_class% = 15 || %kit_class% = 18 || %kit_class% = 16) BEGIN
				SET_2DA_ENTRY row 7 9 ~0x%hex_talos%~ 
//			END
		  END
		END
		PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~BASIC_WEAPONS~) BEGIN	// club, staff, sling
		  INNER_ACTION BEGIN
			COPY_EXISTING ~weapprof.2da~ override
			  READ_2DA_ENTRIES_NOW weapprof 3
			  COUNT_2DA_COLS cols
			  FOR (col = 0; col < cols - 1; ++col) BEGIN
				READ_2DA_ENTRY_FORMER weapprof 0 col column_name
				PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
				  SET_2DA_ENTRY 16 (col + 1) 3 %access%						//	dagger
				  SET_2DA_ENTRY 18 (col + 1) 3 %access%						//	club
				  SET_2DA_ENTRY 23 (col + 1) 3 %access%						//	quarterstaff
				  SET_2DA_ENTRY 28 (col + 1) 3 %access%						//	sling
				END
			  END
			BUT_ONLY
		  END
		END
		PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~MACE_HAMMER~) BEGIN			// maces, war hammers
		  INNER_ACTION BEGIN
			COPY_EXISTING ~weapprof.2da~ override
			  READ_2DA_ENTRIES_NOW weapprof 3
			  COUNT_2DA_COLS cols
			  FOR (col = 0; col < cols - 1; ++col) BEGIN
				READ_2DA_ENTRY_FORMER weapprof 0 col column_name
				PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
				  SET_2DA_ENTRY 22 (col + 1) 3 %access%						// mace
				  SET_2DA_ENTRY 17 (col + 1) 3 %access%						// war hammer
				END
			  END
			BUT_ONLY
		  END
		  PATCH_IF (access = 0) BEGIN
			INNER_ACTION BEGIN
			  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 17 parameter2 = 0 timing = 9 END
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 21 parameter2 = 0 timing = 9 END
			  BUT_ONLY
			END
		  END
		END
		PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~FLAILS~) BEGIN				// flails
		  INNER_ACTION BEGIN
			COPY_EXISTING ~weapprof.2da~ override
			  READ_2DA_ENTRIES_NOW weapprof 3
			  COUNT_2DA_COLS cols
			  FOR (col = 0; col < cols - 1; ++col) BEGIN
				READ_2DA_ENTRY_FORMER weapprof 0 col column_name
				PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
				  SET_2DA_ENTRY 21 (col + 1) 3 %access%						// flail
				END
			  END
			BUT_ONLY
		  END
		  PATCH_IF (access = 0) BEGIN
			INNER_ACTION BEGIN
			  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 23 parameter2 = 0 timing = 9 END
			  BUT_ONLY
			END
		  END
		END
		PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~AXES~) BEGIN				// axes
		  INNER_ACTION BEGIN
			COPY_EXISTING ~weapprof.2da~ override
			  READ_2DA_ENTRIES_NOW weapprof 3
			  COUNT_2DA_COLS cols
			  FOR (col = 0; col < cols - 1; ++col) BEGIN
				READ_2DA_ENTRY_FORMER weapprof 0 col column_name
				PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
				  SET_2DA_ENTRY 12 (col + 1) 3 %access%						// axe
				END
			  END
			BUT_ONLY
		  END
		  PATCH_IF (access = 0) BEGIN
			INNER_ACTION BEGIN
			  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 25 parameter2 = 0 timing = 9 END
			  BUT_ONLY
			END
		  END
		END
		PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~MEDIUM_SWORDS~) BEGIN		// short swords, long swords
		  INNER_ACTION BEGIN
			COPY_EXISTING ~weapprof.2da~ override
			  READ_2DA_ENTRIES_NOW weapprof 3
			  COUNT_2DA_COLS cols
			  FOR (col = 0; col < cols - 1; ++col) BEGIN
				READ_2DA_ENTRY_FORMER weapprof 0 col column_name
				PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
				  SET_2DA_ENTRY 11 (col + 1) 3 %access%						//	short sword
				  SET_2DA_ENTRY 10 (col + 1) 3 %access%						//	long sword
				END
			  END
			BUT_ONLY
		  END
		  PATCH_IF (access = 0) BEGIN
			INNER_ACTION BEGIN
			  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 19 parameter2 = 0 timing = 9 END
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 20 parameter2 = 0 timing = 9 END
			  BUT_ONLY
			END
		  END
		END
		PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~CURVED_SWORDS~) BEGIN		// scimitars, katanas
		  INNER_ACTION BEGIN
			COPY_EXISTING ~weapprof.2da~ override
			  READ_2DA_ENTRIES_NOW weapprof 3
			  COUNT_2DA_COLS cols
			  FOR (col = 0; col < cols - 1; ++col) BEGIN
				READ_2DA_ENTRY_FORMER weapprof 0 col column_name
				PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
				  SET_2DA_ENTRY 15 (col + 1) 3 %access%						//	scimitar
				  SET_2DA_ENTRY 14 (col + 1) 3 %access%						//	katana
				END
			  END
			BUT_ONLY
		  END
		  PATCH_IF (access = 0) BEGIN
			INNER_ACTION BEGIN
			  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 29 parameter2 = 0 timing = 9 END
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 30 parameter2 = 0 timing = 9 END
			  BUT_ONLY
			END
		  END
		END
		PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~LARGE_BLADES~) BEGIN		// 2-hand swords, bastard swords, halberds
		  INNER_ACTION BEGIN
			COPY_EXISTING ~weapprof.2da~ override
			  READ_2DA_ENTRIES_NOW weapprof 3
			  COUNT_2DA_COLS cols
			  FOR (col = 0; col < cols - 1; ++col) BEGIN
				READ_2DA_ENTRY_FORMER weapprof 0 col column_name
				PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
				  SET_2DA_ENTRY 9 (col + 1) 3 %access%						//	bastard sword
				  SET_2DA_ENTRY 13 (col + 1) 3 %access%						//	2-hand sword
				  SET_2DA_ENTRY 20 (col + 1) 3 %access%						//	halberd
				END
			  END
			BUT_ONLY
		  END
		  PATCH_IF (access = 0) BEGIN
			INNER_ACTION BEGIN
			  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 22 parameter2 = 0 timing = 9 END
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 57 parameter2 = 0 timing = 9 END
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 69 parameter2 = 0 timing = 9 END
			  BUT_ONLY
			END
		  END
		END
		PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~SPEARS~) BEGIN				// spears
		  INNER_ACTION BEGIN
			COPY_EXISTING ~weapprof.2da~ override
			  READ_2DA_ENTRIES_NOW weapprof 3
			  COUNT_2DA_COLS cols
			  FOR (col = 0; col < cols - 1; ++col) BEGIN
				READ_2DA_ENTRY_FORMER weapprof 0 col column_name
				PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
				  SET_2DA_ENTRY 19 (col + 1) 3 %access%						//	spear
				END
			  END
			BUT_ONLY
		  END
		  PATCH_IF (access = 0) BEGIN
			INNER_ACTION BEGIN
			  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 21 parameter2 = 0 timing = 9 END
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 22 parameter2 = 0 timing = 9 END
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 23 parameter2 = 0 timing = 9 END
			  BUT_ONLY
			END
		  END
		END
		PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~DARTS~) BEGIN				// darts
		  INNER_ACTION BEGIN
			COPY_EXISTING ~weapprof.2da~ override
			  READ_2DA_ENTRIES_NOW weapprof 3
			  COUNT_2DA_COLS cols
			  FOR (col = 0; col < cols - 1; ++col) BEGIN
				READ_2DA_ENTRY_FORMER weapprof 0 col column_name
				PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
				  SET_2DA_ENTRY 26 (col + 1) 3 %access%						//	darts
				END
			  END
			BUT_ONLY
		  END
		  PATCH_IF (access = 0) BEGIN
			INNER_ACTION BEGIN
			  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 24 parameter2 = 0 timing = 9 END
			  BUT_ONLY
			END
		  END
		END
		PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~BOWS~) BEGIN				// long bows, short bows, arrows
		  INNER_ACTION BEGIN
			COPY_EXISTING ~weapprof.2da~ override
			  READ_2DA_ENTRIES_NOW weapprof 3
			  COUNT_2DA_COLS cols
			  FOR (col = 0; col < cols - 1; ++col) BEGIN
				READ_2DA_ENTRY_FORMER weapprof 0 col column_name
				PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
				  SET_2DA_ENTRY 25 (col + 1) 3 %access%						// long bow
				  SET_2DA_ENTRY 26 (col + 1) 3 %access%						// short bow
				END
			  END
			BUT_ONLY
		  END
		  PATCH_IF (access = 0) BEGIN
			INNER_ACTION BEGIN
			  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 15 parameter2 = 0 timing = 9 END
//				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 5 parameter2 = 0 timing = 9 END
			  BUT_ONLY
			END
		  END
		END
		PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~CROSSBOWS~) BEGIN			// crossbows, bolts
		  INNER_ACTION BEGIN
			COPY_EXISTING ~weapprof.2da~ override
			  READ_2DA_ENTRIES_NOW weapprof 3
			  COUNT_2DA_COLS cols
			  FOR (col = 0; col < cols - 1; ++col) BEGIN
				READ_2DA_ENTRY_FORMER weapprof 0 col column_name
				PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
				  SET_2DA_ENTRY 24 (col + 1) 3 %access%						// crossbow
				END
			  END
			BUT_ONLY
		  END
		  PATCH_IF (access = 0) BEGIN
			INNER_ACTION BEGIN
			  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 27 parameter2 = 0 timing = 9 END
//				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 31 parameter2 = 0 timing = 9 END
			  BUT_ONLY
			END
		  END
		END
	  END
    END
	PHP_EACH d5_fnp_kit_class_access AS kit => class BEGIN
	  PATCH_IF (~%kit%~ STRING_EQUAL_CASE ~%kit_clab%~) BEGIN
		PATCH_IF (~%class%~ STRING_EQUAL_CASE ~DRUID~) BEGIN
		  SET_2DA_ENTRY row 7 9 ~0x%hex_totemic%~ 
		END
		PATCH_IF (~%class%~ STRING_EQUAL_CASE ~MYSTIC~) BEGIN
		  SET_2DA_ENTRY row 7 9 ~0x%hex_shapeshifter%~ 
		END
		PATCH_IF (~%class%~ STRING_EQUAL_CASE ~OCCULTIST~) BEGIN
		  SET_2DA_ENTRY row 7 9 ~0x%hex_avenger%~ 
		END
	  END
	END
	PATCH_IF ~%kit_clab%~ STRING_EQUAL_CASE ~d5drfi~ BEGIN
	  SET_2DA_ENTRY row 7 9 ~0x%hex_totemic%~ // usability
	END
	PATCH_IF ~%kit_clab%~ STRING_EQUAL_CASE ~d5drma~ BEGIN
	  SET_2DA_ENTRY row 7 9 ~0x%hex_totemic%~ // usability
	END
	PATCH_IF ~%kit_clab%~ STRING_EQUAL_CASE ~d5drth~ BEGIN
	  SET_2DA_ENTRY row 7 9 ~0x%hex_totemic%~ // usability
	END
	PATCH_IF ~%kit_clab%~ STRING_EQUAL_CASE ~d5drra~ BEGIN
	  SET_2DA_ENTRY row 7 9 ~0x%hex_totemic%~ // usability
	END
	PATCH_IF (~%kit_clab%~ STRING_EQUAL_CASE ~d5obst~) OR (~%kit_clab%~ STRING_EQUAL_CASE ~clabdr03~) BEGIN
	  INNER_ACTION BEGIN
		COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
		  LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 2 parameter2 = 0 timing = 9 END
		BUT_ONLY
	  END
	END
	INNER_ACTION BEGIN
	  ACTION_IF FILE_EXISTS_IN_GAME ~%kit_clab%.2da~ BEGIN
		APPEND ~%kit_clab%.2da~ ~ABILITY1    AP_d5_u%kit_index~
	  END
	END
   END
  END
BUT_ONLY
//__________________________________________________________________________________

//fix trueclass proficiencies for 2.0_______________________________________________
//
ACTION_IF FILE_EXISTS_IN_GAME ~enginest.2da~ BEGIN
  ACTION_IF FILE_EXISTS_IN_GAME ~d5_menu.d5~ BEGIN
	COPY_EXISTING ~weapprof.2da~ ~override~
// Cleric
	  SET_2DA_ENTRY_LATER ~#weapprof~ 11 6 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 12 6 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 13 6 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 14 6 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 15 6 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 16 6 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 17 6 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 18 6 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 19 6 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 20 6 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 21 6 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 22 6 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 23 6 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 24 6 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 25 6 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 26 6 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 27 6 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 28 6 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 29 6 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 30 6 1
// Druid
	  SET_2DA_ENTRY_LATER ~#weapprof~ 11 10 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 12 10 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 13 10 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 14 10 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 15 10 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 16 10 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 17 10 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 18 10 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 19 10 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 20 10 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 21 10 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 22 10 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 23 10 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 24 10 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 25 10 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 26 10 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 27 10 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 28 10 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 29 10 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 30 10 1
// go!
	  SET_2DA_ENTRIES_NOW ~#weapprof~ 1
	BUT_ONLY
  END
END
//__________________________________________________________________________________


